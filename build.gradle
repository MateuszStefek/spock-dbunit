buildscript {
    repositories {
        jcenter()
    }
}

plugins {
    id "com.jfrog.bintray" version "1.7.3"
    id 'groovy'
    id 'maven-publish'
}



group = 'com.github.janbols'
version = "0.3"

sourceCompatibility = 1.6
targetCompatibility = 1.6

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'


repositories {
    mavenLocal()
    mavenCentral()
}


ext {
    springVersion = '3.1.1.RELEASE'
    spockVersion = '1.0-groovy-2.4'
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.4'
    compile "org.spockframework:spock-core:$spockVersion"
    compile "org.dbunit:dbunit:2.5.1"

    testCompile "org.springframework:spring-context:$springVersion"
    testCompile "org.springframework:spring-beans:$springVersion"
    testCompile "org.springframework:spring-core:$springVersion"
    testCompile "org.springframework:spring-test:$springVersion"
    testCompile "joda-time:joda-time:2.1"
    testCompile 'com.h2database:h2:1.3.166'
    testCompile "org.spockframework:spock-spring:$spockVersion"
    testCompile "org.apache.tomcat:tomcat-jdbc:7.0.27"
}


task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier "sources"
    extension "jar"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// Create the pom configuration:
def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "janbols"
            name "Jan Bols"
            email "guterfluss@gmail.com"
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Dbunit extension for spock avoiding a separate xml file')
                root.appendNode('name', 'spock-dbunit')
                root.appendNode('url', 'https://github.com/janbols/spock-dbunit')
                root.children().last() + pomConfig
            }
        }
    }
}



bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ["mavenJava"]
    pkg {
        repo = 'maven'
        name = 'spock-dbunit'
        licenses = ['Apache-2.0']
        websiteUrl = 'https://github.com/janbols/spock-dbunit'
        vcsUrl = 'https://github.com/janbols/spock-dbunit.git'
        issueTrackerUrl = 'https://github.com/janbols/spock-dbunit/issues'
        labels = ['spock', 'dbunit']

        githubRepo = 'janbols/spock-dbunit' 
        githubReleaseNotesFile = 'README.md'

        version {
            name = project.version
            vcsTag = project.version

            gpg {
                sign = true 
            }
            
            mavenCentralSync {
                sync = true 
                user = System.getenv('OSS_USER_TOKEN')
                password = System.getenv('OSS_PASSWORD')
            }
        }
    }

}
bintrayUpload.dependsOn build, sourcesJar, javadocJar